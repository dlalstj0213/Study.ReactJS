{"version":3,"sources":["components/habit.jsx","components/habitAddForm_20210604.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","events","habit","handleDecrement","handleDelete","e","console","log","this","name","count","id","className","onClick","PureComponent","HabitAddForm","formRef","React","createRef","inputRef","onSubmit","event","preventDefault","current","value","onAdd","reset","ref","action","type","placeholder","Habits","handleAdd","habits","map","handleReset","handleClearAll","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useCallback","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.042f9091.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n//yarn add @fortawesome/fontawesome-free\r\nclass Habit extends PureComponent {\r\n\t// handleIncrement = (event) => {\r\n\t//   console.log(event);\r\n\t// };\r\n\r\n\t/**\r\n\t * Lifecycle Methods\r\n\t * Habit 컴포넌트가 올라왔을때(생성될때)\r\n\t */\r\n\tcomponentDidMount(e) {\r\n\t\tconsole.log(`habit : ${this.props.habit.name} mounted`);\r\n\t}\r\n\t/**\r\n\t * Lifecycle Methods\r\n\t * Habit 컴포넌트가 내려갔을때(없어질때)\r\n\t */\r\n\tcomponentWillUnmount(e) {\r\n\t\tconsole.log(`habit : ${this.props.habit.name} will unmount`);\r\n\t}\r\n\r\n\thandleIncrement = () => {\r\n\t\tthis.props.events.handleIncrement(this.props.habit);\r\n\t};\r\n\r\n\thandleDecrement = () => {\r\n\t\tthis.props.events.handleDecrement(this.props.habit);\r\n\t};\r\n\r\n\thandleDelete = () => {\r\n\t\tthis.props.events.handleDelete(this.props.habit);\r\n\t};\r\n\r\n\trender() {\r\n\t\t//console.log(this.props);\r\n\t\t// const habitName = this.props.habit.name;\r\n\t\t// const habitCount = this.props.habit.count;\r\n\t\tconst { name, count } = this.props.habit;\r\n\t\tconsole.log(this.props.habit.id);\r\n\t\treturn (\r\n\t\t\t<li className=\"habit\">\r\n\t\t\t\t<span className=\"habit-name\">{name}</span>\r\n\t\t\t\t<span className=\"habit-count\">{count}</span>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"habit-button habit-increase\"\r\n\t\t\t\t\tonClick={this.handleIncrement}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-plus-square\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"habit-button habit-decrease\"\r\n\t\t\t\t\tonClick={this.handleDecrement}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-minus-square\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"habit-button habit-delete\"\r\n\t\t\t\t\tonClick={this.handleDelete}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-trash\"></i>\r\n\t\t\t\t</button>\r\n\t\t\t</li>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Habit;\r\n","import React, { PureComponent } from 'react';\r\n\r\nclass HabitAddForm extends PureComponent {\r\n\tformRef = React.createRef();\r\n\tinputRef = React.createRef();\r\n\r\n\tonSubmit = (event) => {\r\n\t\tevent.preventDefault(); //브라우저 리로딩을 막기위한 코드\r\n\t\tconst name = this.inputRef.current.value;\r\n\t\tname && this.props.onAdd(name);\r\n\t\t//초기화\r\n\t\t//this.inputRef.current.value = '';\r\n\t\t//또는\r\n\t\tthis.formRef.current.reset();\r\n\t};\r\n\r\n\trender() {\r\n\t\tconsole.log('HabitForm');\r\n\t\treturn (\r\n\t\t\t<form\r\n\t\t\t\tref={this.formRef}\r\n\t\t\t\taction=\"\"\r\n\t\t\t\tclassName=\"add-Form\"\r\n\t\t\t\tonSubmit={this.onSubmit}\r\n\t\t\t>\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={this.inputRef}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"add-input\"\r\n\t\t\t\t\tplaceholder=\"Habit\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"add-button\">Add</button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default HabitAddForm;\r\n","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\nimport HabitAddForm from './habitAddForm_20210604';\r\n\r\nclass Habits extends Component {\r\n\trender() {\r\n\t\tconsole.log('habits');\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<HabitAddForm onAdd={this.props.events.handleAdd} />\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t{this.props.habits.map((habit) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Habit key={habit.id} habit={habit} events={this.props.events} />\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"habits-reset\"\r\n\t\t\t\t\tonClick={this.props.events.handleReset}\r\n\t\t\t\t>\r\n\t\t\t\t\tReset All\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"habits-clear\"\r\n\t\t\t\t\tonClick={this.props.events.handleClearAll}\r\n\t\t\t\t>\r\n\t\t\t\t\tClear All\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Habits;\r\n","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n\trender() {\r\n\t\tconsole.log('navbar');\r\n\t\treturn (\r\n\t\t\t<nav className=\"navbar\">\r\n\t\t\t\t<i className=\"navbar-logo fas fa-leaf\"></i>\r\n\t\t\t\t<span>Habit Tracker</span>\r\n\t\t\t\t<span className=\"navbar-count\">{this.props.totalCount}</span>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\nimport { isElementOfType } from 'react-dom/test-utils';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\nclass App extends Component {\n\tstate = {\n\t\thabits: [\n\t\t\t{ name: 'Reading', count: 0, id: 'habit_1' },\n\t\t\t{ name: 'Running', count: 0, id: 'habit_2' },\n\t\t\t{ name: 'Coding', count: 0, id: 'habit_3' },\n\t\t],\n\t\tevents: {\n\t\t\t/**\n\t\t\t * 카운트 증가\n\t\t\t * @param {*} habit\n\t\t\t */\n\t\t\thandleIncrement: (habit) => {\n\t\t\t\t/*\n        // state 오브젝트를 직접적으로 수정하는건 좋지않다 !!!\n\t\t\t\thabit.count++;\n        */\n\t\t\t\t/*\n\t\t\t\tconst habits = [...this.state.habits]; // 새로운 배열에 복사\n\t\t\t\tconst index = habits.indexOf(habit);\n\t\t\t\thabits[index].count++;\n\t\t\t\t// key와 value 이름이 똑같으면 하나로 생략가능\n\t\t\t\t//this.setState({ habits: habits });\n\t\t\t\tthis.setState({ habits });\n\t\t\t\t*/\n\t\t\t\t// 2021-06-04 PureComponent와 Shallow Comparison으로 인한 오류 해결 코드\n\t\t\t\tconst habits = this.state.habits.map((item) => {\n\t\t\t\t\tif (item.id === habit.id) {\n\t\t\t\t\t\treturn { ...item, count: item.count + 1 }; //deconstructing objectg\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tthis.setState({ habits });\n\t\t\t},\n\t\t\t/**\n\t\t\t * 카운트 감소\n\t\t\t * @param {*} habit\n\t\t\t */\n\t\t\thandleDecrement: (habit) => {\n\t\t\t\t/*\n\t\t\t\tconst habits = [...this.state.habits];\n\t\t\t\tconst index = habits.indexOf(habit);\n\t\t\t\tconst count = habits[index].count - 1;\n\t\t\t\thabits[index].count = count < 0 ? 0 : count;\n\t\t\t\tthis.setState({ habits: habits });\n\t\t\t\t*/\n\t\t\t\t// 2021-06-04 PureComponent와 Shallow Comparison으로 인한 오류 해결 코드\n\t\t\t\tconst habits = this.state.habits.map((item) => {\n\t\t\t\t\tif (item.id === habit.id) {\n\t\t\t\t\t\tconst count = habit.count - 1;\n\t\t\t\t\t\treturn { ...habit, count: count < 0 ? 0 : count };\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tthis.setState({ habits });\n\t\t\t},\n\t\t\t/**\n\t\t\t * habit 삭제\n\t\t\t * @param {*} habit\n\t\t\t */\n\t\t\thandleDelete: (habit) => {\n\t\t\t\tconst habits = this.state.habits.filter((item) => item.id !== habit.id);\n\t\t\t\tthis.setState({ habits: habits });\n\t\t\t},\n\t\t\t/**\n\t\t\t * habit 추가\n\t\t\t * @param {*} name\n\t\t\t */\n\t\t\thandleAdd: (name) => {\n\t\t\t\t//const habits = [...this.state.habits, {id : Date.now(), name: name, count: 0}]; // Separate operator\n\t\t\t\tconst habits = [\n\t\t\t\t\t...this.state.habits,\n\t\t\t\t\t{ id: Date.now(), name, count: 0 },\n\t\t\t\t]; // 동일한 name 생략가능\n\t\t\t\tthis.setState({ habits });\n\t\t\t},\n\t\t\t/**\n\t\t\t * 카운트 리셋\n\t\t\t */\n\t\t\thandleReset: () => {\n\t\t\t\t/*\n\t\t\t\tconst habits = this.state.habits.map((habit) => {\n\t\t\t\t\thabit.count = 0;\n\t\t\t\t\treturn habit;\n\t\t\t\t});\n\t\t\t\tthis.setState({ habits });\n\t\t\t\t*/\n\t\t\t\t// 2021-06-04 PureComponent와 Shallow Comparison으로 인한 오류 해결 코드\n\t\t\t\tconst habits = this.state.habits.map((item) => {\n\t\t\t\t\tif (item.count !== 0) {\n\t\t\t\t\t\treturn { ...item, count: 0 };\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t});\n\t\t\t\tthis.setState({ habits });\n\t\t\t},\n\t\t\thandleClearAll: () => {\n\t\t\t\tconst habits = this.state.habits.filter((item) => false);\n\t\t\t\tthis.setState({ habits: habits });\n\t\t\t},\n\t\t},\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Navbar\n\t\t\t\t\ttotalCount={this.state.habits.filter((item) => item.count > 0).length}\n\t\t\t\t/>\n\t\t\t\t<Habits habits={this.state.habits} events={this.state.events} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\n\r\nconst SimpleHabit = (props) => {\r\n\tconsole.log(props);\r\n\t/**\r\n\t * 함수형 컴포넌트에서는 클래스 컴포넌트와 달리\r\n\t * state, setState()로 정의해 사용하지 않고\r\n\t * useState('')로 state를 정의한다\r\n\t * const [state변수이름, set+state변수이름] = useState('초기값');\r\n\t * + useState는 메모리에 저장되어 기억되기 때문에 함수가 호출될때 마다\r\n\t * 계속 새로 생성되지 않는다.\r\n\t */\r\n\tconst [count, setCount] = useState(0);\r\n\tconst [name, setName] = useState('Coding');\r\n\t/**\r\n\t * 리액트훅에서는 함수가 메번 호출될때마다\r\n\t * createRef()도 계속 호출되면서 새로운 ref가 생성되므로\r\n\t * 재사용하기 위해 userRef()를 쓴다\r\n\t */\r\n\t//const spanRef = React.createRef();\r\n\tconst spanRef = useRef();\r\n\r\n\t/**\r\n\t * 함수 콜백도 동일한 콜백을 호출하기 위해\r\n\t * useCallback() 을 사용한다.\r\n\t * useCallback() 사용시 주의점은 후에 다시 알아보자\r\n\t */\r\n\tconst handleIncrement = useCallback((e) => {\r\n\t\tsetCount(count + 1);\r\n\t\t//setName(name + count);\r\n\t});\r\n\r\n\t/**\r\n\t * mount 됐을때랑 update됐을때 호출되는 함수\r\n\t * 두번째 인자(파라미터)에서 state변수 또는 props을 배열을 정의하면(ex) ,[count])\r\n\t * 배열안에 정의된 데이터가 변경될때만 호출된다.\r\n\t * 두번째 인자(파라미터)에 빈 [] 배열만 정의하면 처음\r\n\t * mount 됐을때만 호출된다.\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tconsole.log(`mounted & updated : ${count}`);\r\n\t}, [count, name]);\r\n\r\n\treturn (\r\n\t\t<li className=\"habit\">\r\n\t\t\t<span className=\"habit-name\" ref={spanRef}>\r\n\t\t\t\t{name}\r\n\t\t\t</span>\r\n\t\t\t<span className=\"habit-count\">{count}</span>\r\n\t\t\t<button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default SimpleHabit;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n\t// <React.StrictMode>\n\t// \t<App />\n\t// </React.StrictMode>,\n\t/**\n\t * Class, PureComponent, function Component, memo\n\t */\n\t//<App />,\n\t/**\n\t * React Hook\n\t */\n\t<SimpleHabit></SimpleHabit>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}